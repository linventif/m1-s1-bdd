-- create_hotels_schema.sql
-- Schéma Oracle pour la BD "Les Hôtels"
-- Conçu pour SQL*Plus

SET FEEDBACK OFF
SET DEFINE OFF

-- Suppression sûre des tables (si elles existent)
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Reserver CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN IF SQLCODE <> -942 THEN RAISE; END IF; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Proposer CASCADE CONSTRAINTS PURGE'; EXCEPTION WHEN OTHERS THEN IF SQLCODE <> -942 THEN RAISE; END IF; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Client CASCADE CONSTRAINTS PURGE';   EXCEPTION WHEN OTHERS THEN IF SQLCODE <> -942 THEN RAISE; END IF; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Hotel CASCADE CONSTRAINTS PURGE';    EXCEPTION WHEN OTHERS THEN IF SQLCODE <> -942 THEN RAISE; END IF; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE TypeCH CASCADE CONSTRAINTS PURGE';   EXCEPTION WHEN OTHERS THEN IF SQLCODE <> -942 THEN RAISE; END IF; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Societe CASCADE CONSTRAINTS PURGE';  EXCEPTION WHEN OTHERS THEN IF SQLCODE <> -942 THEN RAISE; END IF; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Groupe CASCADE CONSTRAINTS PURGE';   EXCEPTION WHEN OTHERS THEN IF SQLCODE <> -942 THEN RAISE; END IF; END; /

-- Table SOCIETE
CREATE TABLE Societe (
  CodeSoc    NUMBER(6)    CONSTRAINT pk_societe PRIMARY KEY,
  RaisonSoc  VARCHAR2(100) NOT NULL,
  RueSoc     VARCHAR2(120),
  CpSoc      VARCHAR2(10),
  VilleSoc   VARCHAR2(80),
  DomaineSoc VARCHAR2(80)
);

-- Table CLIENT
CREATE TABLE Client (
  CodeC         NUMBER(6)    CONSTRAINT pk_client PRIMARY KEY,
  CivC          VARCHAR2(5)  CONSTRAINT ck_client_civ CHECK (CivC IN ('M','Mme')),
  NomC          VARCHAR2(80) NOT NULL,
  PrenomC       VARCHAR2(80) NOT NULL,
  RueFacC       VARCHAR2(120),
  CPostalFacC   VARCHAR2(10),
  VilleFacC     VARCHAR2(80),
  CodeSoc       NUMBER(6),
  CONSTRAINT fk_client_soc FOREIGN KEY (CodeSoc) REFERENCES Societe(CodeSoc)
);

-- Table GROUPE HOTELIER
CREATE TABLE Groupe (
  CodeGR        NUMBER(6)    CONSTRAINT pk_groupe PRIMARY KEY,
  NomGR         VARCHAR2(100) NOT NULL,
  PaysOrigineGR VARCHAR2(60)  NOT NULL
);

-- Table HOTEL
CREATE TABLE Hotel (
  CodeH       NUMBER(6)    CONSTRAINT pk_hotel PRIMARY KEY,
  NomH        VARCHAR2(120) NOT NULL,
  RueH        VARCHAR2(120),
  CPH         VARCHAR2(10),
  VilleH      VARCHAR2(80),
  PaysH       VARCHAR2(60),
  NbetoilesH  NUMBER(1)     CONSTRAINT ck_hotel_etoiles CHECK (NbetoilesH BETWEEN 1 AND 5),
  CodeGR      NUMBER(6),
  CONSTRAINT fk_hotel_groupe FOREIGN KEY (CodeGR) REFERENCES Groupe(CodeGR)
);

-- Table TYPE DE CHAMBRE
CREATE TABLE TypeCH (
  CodeTyCH   NUMBER(6)     CONSTRAINT pk_typech PRIMARY KEY,
  NomTyCH    VARCHAR2(80)  NOT NULL
);

-- Table PROPOSER (offre de chambres par type & hôtel)
CREATE TABLE Proposer (
  CodeH       NUMBER(6) NOT NULL,
  CodeTyCH    NUMBER(6) NOT NULL,
  NbChambres  NUMBER(4) CONSTRAINT ck_prop_nb CHECK (NbChambres >= 0),
  CONSTRAINT pk_proposer PRIMARY KEY (CodeH, CodeTyCH),
  CONSTRAINT fk_prop_hotel FOREIGN KEY (CodeH) REFERENCES Hotel(CodeH),
  CONSTRAINT fk_prop_type  FOREIGN KEY (CodeTyCH) REFERENCES TypeCH(CodeTyCH)
);

-- Table RESERVER
CREATE TABLE Reserver (
  CodeC      NUMBER(6) NOT NULL,
  CodeH      NUMBER(6) NOT NULL,
  CodeTyCH   NUMBER(6) NOT NULL,
  DateArr    DATE      NOT NULL,
  DateDep    DATE      NOT NULL,
  NombreCH   NUMBER(3) CONSTRAINT ck_res_nb CHECK (NombreCH > 0),
  CONSTRAINT pk_reserver PRIMARY KEY (CodeC, CodeH, CodeTyCH, DateArr),
  CONSTRAINT fk_res_client FOREIGN KEY (CodeC)    REFERENCES Client(CodeC),
  CONSTRAINT fk_res_hotel  FOREIGN KEY (CodeH)    REFERENCES Hotel(CodeH),
  CONSTRAINT fk_res_type   FOREIGN KEY (CodeTyCH) REFERENCES TypeCH(CodeTyCH),
  CONSTRAINT ck_res_dates  CHECK (DateDep > DateArr)
);

-- Fini
PROMPT Schéma créé.
