-- ========================================================
-- TABLES DE BASE AVEC AUTO-INCREMENT (IDENTITY)
-- ========================================================

BEGIN
   FOR t IN (
      SELECT table_name
      FROM user_tables
      WHERE table_name IN (
         'EMPLOYE', 'CLIENT', 'URGENCE', 'FORMATION',
         'CALENDRIERTU', 'CALENDRIERTI', 'CALENDRIERI', 'CALENDRIERU',
         'INTERVENTION', 'QUALIF', 'PLANIFIER_I', 'QUALIFIER',
         'COUTER_I', 'COUTER_U', 'EFFECTUER_I', 'PLANIFIER_U', 'EFFECTUER_U'
      )
   ) LOOP
      EXECUTE IMMEDIATE 'DROP TABLE ' || t.table_name || ' CASCADE CONSTRAINTS';
   END LOOP;
END;
/


CREATE TABLE Employe (
    CodeE NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PrenomE VARCHAR2(50),
    TelE VARCHAR2(50),
    NomE VARCHAR2(50)
);

CREATE TABLE Client (
    CodeC NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NomC VARCHAR2(50),
    PrenomC VARCHAR2(50),
    RueC VARCHAR2(50),
    CPC VARCHAR2(10),
    VilleC VARCHAR2(50),
    DepC VARCHAR2(50),
    NbKm NUMBER
);

CREATE TABLE Urgence (
    CodeU NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NomU VARCHAR2(50)
);

CREATE TABLE Formation (
    CodeF NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NomF VARCHAR2(50)
);

-- ========================================================
-- TABLES CALENDRIER (cl√© composite)
-- ========================================================

CREATE TABLE CalendrierTU (
    DateDebT DATE,
    HeureDebT INTERVAL DAY TO SECOND,
    DateFinT DATE,
    HeureFinT INTERVAL DAY TO SECOND,
    PRIMARY KEY (DateDebT, HeureDebT)
);

CREATE TABLE CalendrierTI (
    DateDebT DATE,
    HeureDebT INTERVAL DAY TO SECOND,
    DateFinT DATE,
    HeureFinT INTERVAL DAY TO SECOND,
    PRIMARY KEY (DateDebT, HeureDebT)
);

CREATE TABLE CalendrierI (
    DateI DATE,
    HeureI INTERVAL DAY TO SECOND,
    PRIMARY KEY (DateI, HeureI)
);

CREATE TABLE CalendrierU (
    DateU DATE,
    HeureU INTERVAL DAY TO SECOND,
    PRIMARY KEY (DateU, HeureU)
);

-- ========================================================
-- INTERVENTION ET QUALIFICATION
-- ========================================================

CREATE TABLE Intervention (
    CodeI NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NomI VARCHAR2(50),
    MontantChequeClient NUMBER(10,2),
    TarifPublicI NUMBER(10,2),
    TarifKmI NUMBER(10,2),
    CodeI_1 NUMBER,
    CodeU NUMBER,
    FOREIGN KEY (CodeI_1) REFERENCES Intervention(CodeI),
    FOREIGN KEY (CodeU) REFERENCES Urgence(CodeU)
);

CREATE TABLE Qualif (
    CodeQ NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DateDebQ DATE,
    DateFinQ DATE,
    CodeF NUMBER NOT NULL,
    FOREIGN KEY (CodeF) REFERENCES Formation(CodeF)
);

-- ========================================================
-- RELATIONS ENTRE TABLES
-- ========================================================

CREATE TABLE Planifier_I (
    CodeE NUMBER,
    CodeC NUMBER,
    CodeI NUMBER,
    DateI DATE,
    HeureI INTERVAL DAY TO SECOND,
    PRIMARY KEY (CodeE, CodeC, CodeI),
    FOREIGN KEY (CodeE) REFERENCES Employe(CodeE),
    FOREIGN KEY (CodeC) REFERENCES Client(CodeC),
    FOREIGN KEY (CodeI) REFERENCES Intervention(CodeI)
);

CREATE TABLE Qualifier (
    CodeE NUMBER,
    CodeI NUMBER,
    CodeQ NUMBER,
    PRIMARY KEY (CodeE, CodeI, CodeQ),
    FOREIGN KEY (CodeE) REFERENCES Employe(CodeE),
    FOREIGN KEY (CodeI) REFERENCES Intervention(CodeI),
    FOREIGN KEY (CodeQ) REFERENCES Qualif(CodeQ)
);

CREATE TABLE Couter_I (
    CodeI NUMBER,
    DateDebT DATE,
    HeureDebT INTERVAL DAY TO SECOND,
    Tarif NUMBER(10,2),
    PRIMARY KEY (CodeI, DateDebT, HeureDebT),
    FOREIGN KEY (CodeI) REFERENCES Intervention(CodeI),
    FOREIGN KEY (DateDebT, HeureDebT) REFERENCES CalendrierTI(DateDebT, HeureDebT)
);

CREATE TABLE Couter_U (
    CodeU NUMBER,
    DateDebT DATE,
    HeureDebT INTERVAL DAY TO SECOND,
    Tarif NUMBER(10,2),
    PRIMARY KEY (CodeU, DateDebT, HeureDebT),
    FOREIGN KEY (CodeU) REFERENCES Urgence(CodeU),
    FOREIGN KEY (DateDebT, HeureDebT) REFERENCES CalendrierTU(DateDebT, HeureDebT)
);

CREATE TABLE Effectuer_I (
    CodeE NUMBER,
    CodeC NUMBER,
    CodeI NUMBER,
    DateI DATE,
    HeureI INTERVAL DAY TO SECOND,
    DureeI NUMBER(15,2),
    PRIMARY KEY (CodeE, CodeC, CodeI, DateI, HeureI),
    FOREIGN KEY (CodeE) REFERENCES Employe(CodeE),
    FOREIGN KEY (CodeC) REFERENCES Client(CodeC),
    FOREIGN KEY (CodeI) REFERENCES Intervention(CodeI),
    FOREIGN KEY (DateI, HeureI) REFERENCES CalendrierI(DateI, HeureI)
);

CREATE TABLE Planifier_U (
    CodeE NUMBER,
    CodeC NUMBER,
    CodeU NUMBER,
    DateU DATE,
    PRIMARY KEY (CodeE, CodeC, CodeU),
    FOREIGN KEY (CodeE) REFERENCES Employe(CodeE),
    FOREIGN KEY (CodeC) REFERENCES Client(CodeC),
    FOREIGN KEY (CodeU) REFERENCES Urgence(CodeU)
);

CREATE TABLE Effectuer_U (
    CodeE NUMBER,
    CodeC NUMBER,
    CodeU NUMBER,
    DateU DATE,
    HeureU INTERVAL DAY TO SECOND,
    DureeU NUMBER(15,2),
    PRIMARY KEY (CodeE, CodeC, CodeU, DateU, HeureU),
    FOREIGN KEY (CodeE) REFERENCES Employe(CodeE),
    FOREIGN KEY (CodeC) REFERENCES Client(CodeC),
    FOREIGN KEY (CodeU) REFERENCES Urgence(CodeU),
    FOREIGN KEY (DateU, HeureU) REFERENCES CalendrierU(DateU, HeureU)
);
